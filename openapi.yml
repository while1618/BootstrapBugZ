openapi: 3.0.3
info:
  title: BootstrapBugZ
  description: Description
  termsOfService: https://github.com/while1618
  contact:
    email: dejan.zdravkovic96@gmail.com
  license:
    name: MIT License
    url: https://choosealicense.com/licenses/mit/
  version: 1.0.0
servers:
  - url: http://localhost:8181/v1.0
  - url: https://localhost:8181/v1.0
tags:
  - name: auth
    description: Auth Endpoints
  - name: user
    description: User Endpoints
  - name: admin
    description: Admin Endpoints
paths:
  /auth/sign-up:
    post:
      tags:
        - auth
      summary: Sign Up
      operationId: signUp
      requestBody:
        description: Sign Up Request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
            example:
              firstName: John
              lastName: Doe
              username: john
              email: john.doe@localhost.com
              password: qwerty123
              confirmPassword: qwerty123
      responses:
        201:
          description: Sign Up Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              example:
                id: 1
                firstName: John
                lastName: Doe
                username: john
                email: john.doe@localhost.com
                activated: false
                nonLocked: true
                roles:
                  - name: USER
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                timestamp: 18-10-2021 04:00:44
                status: 400
                error: Bad Request
                errors:
                  - domain: username
                    message: Username already exists.
                  - domain: email
                    message: Email already exists.
      x-codegen-request-body-name: body
components:
  schemas:
    SignUpRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        confirmPassword:
          type: string
    ResendConfirmationEmailRequest:
      type: object
      properties:
        usernameOrEmail:
          type: string
    LoginRequest:
      type: object
      properties:
        usernameOrEmail:
          type: string
        password:
          type: string
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
          format: JWT
    ForgotPasswordRequest:
      type: object
      properties:
        email:
          type: string
          format: email
    ResetPasswordRequest:
      type: object
      properties:
        accessToken:
          type: string
          format: JWT
        password:
          type: string
        confirmPassword:
          type: string
    UpdateUserRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
    ChangePasswordRequest:
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
        confirmNewPassword:
          type: string
    AdminRequest:
      type: object
      properties:
        usernames:
          type: array
          items:
            type: string
    ChangeRoleRequest:
      type: object
      properties:
        usernames:
          type: array
          items:
            type: string
        roleNames:
          type: array
          items:
            type: string
            enum:
              - USER
              - ADMIN
    RoleResponse:
      type: object
      properties:
        name:
          type: string
          enum:
            - USER
            - ADMIN
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        activated:
          type: boolean
        nonLocked:
          type: boolean
        roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleResponse'
    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
          format: JWT
        refreshToken:
          type: string
          format: JWT
        user:
          $ref: '#/components/schemas/UserResponse'
    RefreshTokenResponse:
      properties:
        accessToken:
          type: string
          format: JWT
        refreshToken:
          type: string
          format: JWT
    ErrorResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        status:
          type: integer
          format: int32
        error:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              domain:
                type: string
              message:
                type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
